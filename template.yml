AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  TableName:
    Type: String
    Default: yourTableName
    Description: (Required) The name of the new DynamoDB table you want to create and save to. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z]+$
    ConstraintDescription: Required parameter. Must be characters only. No numbers allowed.

Resources:

  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Auth:
        DefaultAuthorizer: MyLambdaTokenAuthorizer
        Authorizers: 
          MyLambdaTokenAuthorizer:
            FunctionArn: !GetAtt MyAuthFunction.Arn
    
  HelloFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: handler.hello
      Runtime: nodejs10.x
      CodeUri: .
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableName
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName  
      Events:
        HelloAPI:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /hello
            Method: POST
        GETOperationsAPI:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /hello
            Method: GET
        OtherOperationsAPI:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /hello/{itemId}
            Method: ANY
      Timeout: 100
  ModelSearchFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: handler.modelSearchService
      Runtime: nodejs10.x
      CodeUri: .
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableName
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName  
      Events:
        SearchModelAPI:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /get-car-model/{modelName}
            Method: GET
      Timeout: 100
  PriceRetrievalFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: handler.priceRetrievalService
      Runtime: nodejs10.x
      CodeUri: .
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableName
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName  
      Events:
        SearchModelAPI:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /get-car-price/{itemId}
            Method: GET
      Timeout: 100
  OptionsRetrievalFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: handler.optionsRetrievalService
      Runtime: nodejs10.x
      CodeUri: .
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableName
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName  
      Events:
        SearchModelAPI:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /get-car-options/{itemId}
            Method: GET
      Timeout: 100

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TableName
      AttributeDefinitions:
        - AttributeName: itemId
          AttributeType: S
      KeySchema:
        - AttributeName: itemId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  
  MyAuthFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: ./authorizer
      Handler: handler.authorizer
      Runtime: nodejs10.x
  
Outputs:
  Region:
    Description: "Region"
    Value: !Ref AWS::Region

  ApiId:
    Description: "API ID"
    Value: !Ref MyApi

  ApiUrl:
    Description: "API endpoint URL for Prod environment"
    Value: !Sub 'https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/dev/'